#include <stdio.h>
#include <stdlib.h>
typedef struct cnode
{
	int data;
	struct cnode *next;
}cnode;
cnode *head = NULL;
cnode *temp = NULL;
cnode *getnode();
void insert_at_beg();
void display();
void insert_at_end();
void insert_at_pos();
void del_at_beg();
void del_at_end();
void del_at_pos();
void len();
void main()
{
	int ch;
	while(1)
	{
		printf("\n1.Insert at begining\n2.Display\n3.Insertion at end\n4.Insert at a given position\n5.Delete element at begining\n6.Deletion at end\n7.Deletion at a given position\n8.Length of circular linked list\n9.Exit\nEnter choice : ");
		scanf("%d", &ch);
		switch(ch)
		{
			case 1: printf("Insertion at begining");
				insert_at_beg();
				break;
			case 2: printf("Displaying the elements : ");
				display();
				break;
			case 3: printf("Insertion at end");
				insert_at_end();
				break;
			case 4: printf("Insertion of element at a given position");
				insert_at_pos();
				break;
			case 5: printf("Deletion at begining");
				del_at_beg();
				break;
			case 6: printf("Deletion at end");
				del_at_end();
				break;
			case 7: printf("Deletion at a given position");
				del_at_pos();
				break;
			case 8: printf("Length of cll till now");
				len();
				break;
			case 9: printf("Exited");
				exit(0);
			default: printf("Invalid choice!!");
		}
	}
}
cnode *getnode()
{
	cnode *new = (cnode*)malloc(sizeof(cnode));
	printf("\nEnter element : ");
	scanf("%d", &new->data);
	new->next = NULL;
	return new;
}
void insert_at_beg()
{
	cnode *new = getnode();
	if(head == NULL)
	{
		head = new;
		head->next = head;
		temp = new;
	}
	else
	{
		new->next = head;
		temp->next = new;
		head = new;
	}
}
void display()
{
	cnode *curr = head;
	while(curr->next != head)
	{
		printf("%d\t", curr->data);
		curr = curr->next;
	}
	printf("%d", curr->data);
}
void insert_at_end()
{
	cnode *new = getnode();
	if(head == NULL)
	{
		head = new;
		head->next = new;
		temp = new;
	}
	else
	{
		temp->next = new;
		new->next = head;
		temp = new;
	}
}
void insert_at_pos()
{
	cnode *new = getnode();
	cnode *temp1 = head;
	int p, i;
	printf("\nEnter the position where element to be inserted : ");
	scanf("%d", &p);
	for(i = 1; i < p-1; i++)
	{
		temp1 = temp1->next;
	}
	new->next = temp1->next;
	temp1->next = new;
}
void del_at_beg()
{
	cnode *temp1 = head;
	if(head == NULL)
	{
		printf("\nThere are no nodes to delete!");
	}
	else if(head->next == head)
	{
		head = NULL;
		temp = NULL;
		free(temp1);
	}
	else
	{
		head = head->next;
		temp->next = head;
		free(temp1);
	}
}

void del_at_end()
{
	cnode *t = temp;
	cnode *temp1 = head;
	if(head == NULL)
	{
		printf("\nThere are no nodes to delete!");
	}
	else if(head->next == head)
	{
		head = NULL;
		temp = NULL;
		free(temp1);
	}
	else
	{
		while(temp1->next != temp)
		{
			temp1 = temp1->next;
		}
		temp1->next = head;
		temp = temp1;
		free(t);
	}
}

void del_at_pos()
{
	cnode *temp1 = head;
	cnode *t;
	int i, k;
	printf("\nEnter the position to delete the element : ");
	scanf("%d", &k);
	for(i = 1; i < k - 1; i++)
	{
		temp1 = temp1->next;
	}
	t = temp1->next;
	temp1->next = temp1->next->next;
	free(t);
}
void len()
{
	cnode *curr = head;
	int count = 0;
	while(curr->next != head)
	{
		curr = curr->next;
		count++;
	}
	printf("\nLength of cll till now is : %d", count + 1);
}
